plugins {
    id 'io.jmix' version '2.1.3'
    id 'java'
    id "org.sonarqube" version "4.0.0.2929"
    id "org.owasp.dependencycheck" version "9.0.9"
    id 'io.spring.dependency-management' version '1.1.0'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

jmix {
    bomVersion = '2.1.3'
}

group = 'com.company'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'https://global.repo.jmix.io/repository/public/'
    }
}

ext {
    set('springCloudVersion', "2022.0.3")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation 'io.jmix.core:jmix-core-starter'
    implementation 'io.jmix.data:jmix-eclipselink-starter'
    implementation 'io.jmix.rest:jmix-rest-starter'
    implementation 'io.jmix.security:jmix-security-starter'
    implementation 'io.jmix.security:jmix-security-data-starter'
    implementation 'io.jmix.localfs:jmix-localfs-starter'
    implementation 'io.jmix.authserver:jmix-authserver-starter'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
//    implementation 'org.springframework.boot:spring-boot-docker-compose'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'


    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    implementation 'org.hsqldb:hsqldb'
    implementation 'org.postgresql:postgresql'
    implementation 'org.postgresql:postgresql'
    implementation 'org.hsqldb:hsqldb'
    implementation 'org.hsqldb:hsqldb'
    implementation 'org.hsqldb:hsqldb'
    implementation 'org.postgresql:postgresql'
    implementation 'com.mysql:mysql-connector-j'
    implementation 'org.hsqldb:hsqldb'
    implementation 'org.postgresql:postgresql'
    implementation 'com.mysql:mysql-connector-j'
    implementation 'org.postgresql:postgresql'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
    }
}

task generateJavadoc(type: Javadoc) {
    source = sourceSets.main.allJava
    classpath = configurations.compileClasspath
    destinationDir = file("$buildDir/docs/javadoc")
}
