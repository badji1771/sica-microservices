version: '3.3'

services:
  cloud-config-server:
    image: dthibau/cloud-config:3.2.2
    environment:
      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://gitlab.com/babatraore/cloudconfig.git
#      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://gitlab.com/sdi-poc/sica-microservices/config.git
    ports:
      - 8888:8888

  eureka:
    image: dthibau/eureka:3.2.2
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://cloud-config-server:8888
      - SPRING_CLOUD_CONFIG_FAILFAST=true
    ports:
      - "1111:1111"
    depends_on:
      - cloud-config-server
    restart: on-failure

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ghostcode
      POSTGRES_PASSWORD: 171201@Monkey
    volumes:
      - postgres-data:/var/lib/postgresql/data

#  keycloak:
#    image: quay.io/keycloak/keycloak
#    command: [ "start-dev", "--import-realm" ]
#    environment:
#      - KEYCLOAK_ADMIN=admin
#      - KEYCLOAK_ADMIN_PASSWORD=admin
#    ports:
#      - 8180:8080
#    volumes:
#      - .:/opt/keycloak/data/import
#
#  kafka:
#    image: docker.io/bitnami/kafka:3.4
#    ports:
#      - "9092:9092"
#    volumes:
#      - "kafka_data:/bitnami"
#    environment:
#      - ALLOW_PLAINTEXT_LISTENER=yes
#      - KAFKA_CFG_NODE_ID=0
#      - KAFKA_CFG_PROCESS_ROLES=controller,broker
#      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
#      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
#      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
#
#  redpanda:
#    image: docker.redpanda.com/redpandadata/console:latest
#    ports:
#      - 8079:8080
#    environment:
#      - KAFKA_BROKERS=kafka:9092
#
#  zipkin:
#    image: openzipkin/zipkin
#    ports:
#      - "9411:9411"
#
#  sonarqube:
#    image: sonarqube:latest
#    restart: always
#    ports:
#      - "9000:9000"
#    volumes:
#      - sonarqube-data:/var/lib/sonarqube
#      - sonarqube-logs:/opt/sonarqube/logs
#    environment:
#      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: true
#      SONARQUBE_JDBC_URL: jdbc:postgresql://192.168.33.10:5432/ghostcode/sonar
#      SONARQUBE_JDBC_USERNAME: ghostcode
#      SONARQUBE_JDBC_PASSWORD: 171201@Monkey

volumes:
  postgres-data:
  sonarqube-data:
  sonarqube-logs:
  # kafka_data:
  #   driver: local
 
